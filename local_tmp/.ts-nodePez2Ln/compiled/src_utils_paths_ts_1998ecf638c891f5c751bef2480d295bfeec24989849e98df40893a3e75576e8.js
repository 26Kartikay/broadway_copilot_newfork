"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureDir = ensureDir;
exports.userUploadDir = userUploadDir;
exports.staticUploadsMount = staticUploadsMount;
const promises_1 = __importDefault(require("fs/promises"));
const path_1 = __importDefault(require("path"));
const errors_1 = require("./errors");
async function ensureDir(dirPath) {
    if (!dirPath) {
        throw new errors_1.BadRequestError('Directory path is required');
    }
    try {
        await promises_1.default.mkdir(dirPath, { recursive: true });
    }
    catch (err) {
        if (err instanceof errors_1.HttpError) {
            throw err;
        }
        throw new errors_1.InternalServerError('Failed to create directory');
    }
}
function uploadsDir() {
    return path_1.default.resolve(process.cwd(), 'uploads');
}
function userUploadDir(whatsappId) {
    if (!whatsappId) {
        throw new errors_1.BadRequestError('WhatsApp ID is required');
    }
    const sanitizedId = whatsappId.replace(/[^a-zA-Z0-9_+]/g, '_');
    return path_1.default.join(process.cwd(), 'uploads', sanitizedId);
}
function staticUploadsMount() {
    return uploadsDir();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL3Vzci9zcmMvYXBwL3NyYy91dGlscy9wYXRocy50cyIsInNvdXJjZXMiOlsiL3Vzci9zcmMvYXBwL3NyYy91dGlscy9wYXRocy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQWdCQSw4QkFZQztBQWtCRCxzQ0FNQztBQU9ELGdEQUVDO0FBN0RELDJEQUE2QjtBQUM3QixnREFBd0I7QUFFeEIscUNBQTJFO0FBYXBFLEtBQUssVUFBVSxTQUFTLENBQUMsT0FBZTtJQUM3QyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDYixNQUFNLElBQUksd0JBQWUsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFDRCxJQUFJLENBQUM7UUFDSCxNQUFNLGtCQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFBQyxPQUFPLEdBQVksRUFBRSxDQUFDO1FBQ3RCLElBQUksR0FBRyxZQUFZLGtCQUFTLEVBQUUsQ0FBQztZQUM3QixNQUFNLEdBQUcsQ0FBQztRQUNaLENBQUM7UUFDRCxNQUFNLElBQUksNEJBQW1CLENBQUMsNEJBQTRCLENBQUMsQ0FBQztJQUM5RCxDQUFDO0FBQ0gsQ0FBQztBQU9ELFNBQVMsVUFBVTtJQUNqQixPQUFPLGNBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQ2hELENBQUM7QUFTRCxTQUFnQixhQUFhLENBQUMsVUFBa0I7SUFDOUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2hCLE1BQU0sSUFBSSx3QkFBZSxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUNELE1BQU0sV0FBVyxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDL0QsT0FBTyxjQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDMUQsQ0FBQztBQU9ELFNBQWdCLGtCQUFrQjtJQUNoQyxPQUFPLFVBQVUsRUFBRSxDQUFDO0FBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgZnJvbSAnZnMvcHJvbWlzZXMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5cbmltcG9ydCB7IEJhZFJlcXVlc3RFcnJvciwgSHR0cEVycm9yLCBJbnRlcm5hbFNlcnZlckVycm9yIH0gZnJvbSAnLi9lcnJvcnMnO1xuXG4vKipcbiAqIEZpbGVzeXN0ZW0gaGVscGVycyBmb3IgdXBsb2FkcyBkaXJlY3RvcnkgaGFuZGxpbmcuXG4gKi9cblxuLyoqXG4gKiBFbnN1cmVzIGEgZGlyZWN0b3J5IGV4aXN0cywgY3JlYXRpbmcgaXQgcmVjdXJzaXZlbHkgaWYgbmVjZXNzYXJ5LlxuICpcbiAqIEBwYXJhbSBkaXJQYXRoIC0gVGhlIGRpcmVjdG9yeSBwYXRoIHRvIGNyZWF0ZVxuICogQHRocm93cyB7QmFkUmVxdWVzdEVycm9yfSBpZiBwYXRoIGlzIGVtcHR5XG4gKiBAdGhyb3dzIHtJbnRlcm5hbFNlcnZlckVycm9yfSBpZiBkaXJlY3RvcnkgY3JlYXRpb24gZmFpbHNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuc3VyZURpcihkaXJQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgaWYgKCFkaXJQYXRoKSB7XG4gICAgdGhyb3cgbmV3IEJhZFJlcXVlc3RFcnJvcignRGlyZWN0b3J5IHBhdGggaXMgcmVxdWlyZWQnKTtcbiAgfVxuICB0cnkge1xuICAgIGF3YWl0IGZzLm1rZGlyKGRpclBhdGgsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICB9IGNhdGNoIChlcnI6IHVua25vd24pIHtcbiAgICBpZiAoZXJyIGluc3RhbmNlb2YgSHR0cEVycm9yKSB7XG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIHRocm93IG5ldyBJbnRlcm5hbFNlcnZlckVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIGRpcmVjdG9yeScpO1xuICB9XG59XG5cbi8qKlxuICogR2V0cyB0aGUgYWJzb2x1dGUgcGF0aCB0byB0aGUgdXBsb2FkcyBkaXJlY3RvcnkuXG4gKlxuICogQHJldHVybnMgQWJzb2x1dGUgcGF0aCB0byB0aGUgdXBsb2FkcyBkaXJlY3RvcnlcbiAqL1xuZnVuY3Rpb24gdXBsb2Fkc0RpcigpOiBzdHJpbmcge1xuICByZXR1cm4gcGF0aC5yZXNvbHZlKHByb2Nlc3MuY3dkKCksICd1cGxvYWRzJyk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdXBsb2FkIGRpcmVjdG9yeSBwYXRoIGZvciBhIHNwZWNpZmljIFdoYXRzQXBwIHVzZXIuXG4gKlxuICogQHBhcmFtIHdoYXRzYXBwSWQgLSBXaGF0c0FwcCB1c2VyIElEIChlLmcuLCBcIndoYXRzYXBwOisxMjM0NTY3ODkwXCIpXG4gKiBAcmV0dXJucyBBYnNvbHV0ZSBwYXRoIHRvIHRoZSB1c2VyJ3MgdXBsb2FkIGRpcmVjdG9yeVxuICogQHRocm93cyB7QmFkUmVxdWVzdEVycm9yfSBpZiB3aGF0c2FwcElkIGlzIGVtcHR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VyVXBsb2FkRGlyKHdoYXRzYXBwSWQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIGlmICghd2hhdHNhcHBJZCkge1xuICAgIHRocm93IG5ldyBCYWRSZXF1ZXN0RXJyb3IoJ1doYXRzQXBwIElEIGlzIHJlcXVpcmVkJyk7XG4gIH1cbiAgY29uc3Qgc2FuaXRpemVkSWQgPSB3aGF0c2FwcElkLnJlcGxhY2UoL1teYS16QS1aMC05XytdL2csICdfJyk7XG4gIHJldHVybiBwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3VwbG9hZHMnLCBzYW5pdGl6ZWRJZCk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgbW91bnQgcG9pbnQgZm9yIHNlcnZpbmcgc3RhdGljIHVwbG9hZCBmaWxlcy5cbiAqXG4gKiBAcmV0dXJucyBBYnNvbHV0ZSBwYXRoIHRvIHRoZSB1cGxvYWRzIGRpcmVjdG9yeSBmb3Igc3RhdGljIGZpbGUgc2VydmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gc3RhdGljVXBsb2Fkc01vdW50KCk6IHN0cmluZyB7XG4gIHJldHVybiB1cGxvYWRzRGlyKCk7XG59XG4iXX0=